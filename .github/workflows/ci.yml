name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Test imports and basic functionality
      run: |
        poetry run python -c "import lang; print('âœ… Package imports successfully')"
        poetry run python -m lang
      env:
        OPENAI_API_KEY: dummy-key-for-testing
    
    - name: Check code formatting (if black is added)
      run: |
        echo "Code formatting check would go here"
        # poetry run black --check .
    
    - name: Run type checking (if mypy is added)
      run: |
        echo "Type checking would go here"
        # poetry run mypy lang/
    
    - name: Run tests (if pytest is added)
      run: |
        echo "Tests would go here"
        # poetry run pytest
